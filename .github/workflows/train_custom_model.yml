name: train custom model

on:
  workflow_dispatch:
    inputs:
      datasetName: 
        description: 'Name of dataset in Azure Custom Vision'     
        required: true
        default: 'sceneradatasetv1'
        type: string
      modelName: 
        description: 'Name of the custom model to train in Azure Custom Vision'     
        required: true
        default: 'scenera-model-v1'
        type: string
      resourceName: 
        description: 'Name of the computer vision resource in Azure'     
        required: true
        default: 'scenera-computervision-rnd-resource'
        type: string
jobs:
  train-custom-model:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.training.outputs.test }}
      output2: ${{ steps.training.outputs.test2 }}
      my_var: ${{steps.training.outputs.my_var}}
      my_vars: ${{steps.training.outputs.my_vars}}
    steps:
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: train custom model
        env:
          RESOURCE_KEY: ${{secrets.RESOURCE_KEY}} 
          INPUT_MODEL_NAME: ${{ github.event.inputs.modelName }}
          INPUT_DATASET_NAME: ${{ github.event.inputs.datasetName }} 
          INPUT_RESOURCE_NAME: ${{ github.event.inputs.resourceName }}
        run: |
          python train.py
          echo "runingid=${{ steps.training.outputs.myoutput }}" >> $GITHUB_OUTPUT 
          echo "::set-output name=test::$runId"
          echo "::set-output name=test2::world"
          my_var="Hello World"
          echo "Output [$my_var]"
          echo "my_var=$my_var" >> $GITHUB_OUTPUT
          my_vars=${{ steps.training.outputs.myoutput }}
          echo "Output [$my_vars]"
          echo "my_vars=$my_vasr" >> $GITHUB_OUTPUT 
        id: training
        shell: bash
        working-directory: ./src/model
      - run: |
          echo "-> ${{ steps.training.outputs.myoutput }}" 
          echo "-> ${{ steps.training.outputs.myoutput2 }}" 
  get_model_training_status:
    needs: train-custom-model
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: install python packages
        env:
          OUTPUT1: ${{needs.train-custom-model.outputs.output1}}
          OUTPUT2: ${{needs.train-custom-model.outputs.output2}}
          OUTPUT3: ${{needs.train-custom-model.outputs.my_vars}}
          OUTPUT4: ${{needs.train-custom-model.outputs.runingid}}
        run: |
          echo "****************************"
          echo "1-------****>$OUTPUT1"
          echo "2-------****>$OUTPUT2"
          echo "3-------****>$OUTPUT3"
          echo "4-------****>$OUTPUT4"
          echo "****************************"
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: get training model status
        env:
          OUTPUT1: ${{needs.training.outputs.output1}}
          RESOURCE_KEY: ${{secrets.RESOURCE_KEY}}
          INPUT_MODEL_NAME: ${{ github.event.inputs.modelName }}
          INPUT_DATASET_NAME: ${{ github.event.inputs.datasetName }} 
          INPUT_RESOURCE_NAME: ${{ github.event.inputs.resourceName }}  
        run: |
          python model_status.py
        working-directory: ./train_custom_model

  # log_training_metrics:
  #   needs: get_model_training_status
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout repo content
  #       uses: actions/checkout@v2

  #     - name: setup python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10' 
  #     - name: install python packages
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: log training metrics
  #       env:
  #         RESOURCE_KEY: ${{secrets.RESOURCE_KEY}}
  #         INPUT_MODEL_NAME: ${{ github.event.inputs.modelName }}
  #         INPUT_DATASET_NAME: ${{ github.event.inputs.datasetName }} 
  #         INPUT_RESOURCE_NAME: ${{ github.event.inputs.resourceName }}  
  #       run: |
  #         python log_model_metrics.py
  #       working-directory: ./train_custom_model
